<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Cloudflare Pages on My Blog</title>
        <link>http://192.168.100.63:1313/tags/cloudflare-pages/</link>
        <description>Recent content in Cloudflare Pages on My Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 15 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://192.168.100.63:1313/tags/cloudflare-pages/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Setting Up Hugo with Gitea, GitHub, and Cloudflare Pages</title>
        <link>http://192.168.100.63:1313/projects/hugo-blog-setup/</link>
        <pubDate>Sat, 15 Mar 2025 00:00:00 +0000</pubDate>
        
        <guid>http://192.168.100.63:1313/projects/hugo-blog-setup/</guid>
        <description>&lt;h1 id=&#34;getting-my-blog-actually-working-hugo--gitea--github--cloudflare-pages&#34;&gt;&lt;a href=&#34;#getting-my-blog-actually-working-hugo--gitea--github--cloudflare-pages&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Getting My Blog Actually Working: Hugo + Gitea + GitHub + Cloudflare Pages
&lt;/h1&gt;&lt;p&gt;&lt;em&gt;Or: How I learned to stop worrying and love Git submodules (eventually)&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;So I finally got tired of not having a proper blog. You know how it is - you keep meaning to write stuff down, maybe share some of the things you&amp;rsquo;ve figured out, but then you get stuck on the whole &amp;ldquo;where do I even host this thing&amp;rdquo; question for like six months.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d been running other services in my homelab, so naturally I wanted to keep control of my content while still making it easy to publish. After way too much research (and a few false starts), I ended up with Hugo feeding into a pretty slick deployment pipeline. Here&amp;rsquo;s how it all came together.&lt;/p&gt;
&lt;h2 id=&#34;why-hugo-though&#34;&gt;&lt;a href=&#34;#why-hugo-though&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Why Hugo Though?
&lt;/h2&gt;&lt;p&gt;Honestly? Speed and simplicity. I&amp;rsquo;ve dealt with WordPress before and while it&amp;rsquo;s powerful, I really didn&amp;rsquo;t want to babysit another database or worry about security updates for a CMS. Hugo just takes markdown files and spits out a static site that loads crazy fast.&lt;/p&gt;
&lt;p&gt;Plus, the whole &amp;ldquo;write in markdown, commit to git, site updates automatically&amp;rdquo; workflow really appealed to the developer side of my brain. No admin panels, no databases, just files and version control.&lt;/p&gt;
&lt;h2 id=&#34;the-setup-spoiler-it-got-complicated&#34;&gt;&lt;a href=&#34;#the-setup-spoiler-it-got-complicated&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Setup (Spoiler: It Got Complicated)
&lt;/h2&gt;&lt;p&gt;My plan seemed reasonable enough:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keep the main repo in my internal Gitea instance (because I like having control)&lt;/li&gt;
&lt;li&gt;Mirror it to GitHub (because that&amp;rsquo;s what Cloudflare Pages wants to see)&lt;/li&gt;
&lt;li&gt;Let Cloudflare handle the building and hosting (because why reinvent that wheel)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple, right? &lt;em&gt;Narrator: It was not simple.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;getting-hugo-running&#34;&gt;&lt;a href=&#34;#getting-hugo-running&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Getting Hugo Running
&lt;/h3&gt;&lt;p&gt;The basic setup was actually painless. On my server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create the site structure:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site myblog
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So far so good. Then I needed a theme, and that&amp;rsquo;s where things got&amp;hellip; interesting.&lt;/p&gt;
&lt;h2 id=&#34;the-great-submodule-adventure&#34;&gt;&lt;a href=&#34;#the-great-submodule-adventure&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Great Submodule Adventure
&lt;/h2&gt;&lt;p&gt;Hugo themes are typically managed as Git submodules, which sounds great in theory. In practice? Well, let me tell you about my afternoon of increasingly creative swearing.&lt;/p&gt;
&lt;h3 id=&#34;what-i-tried-first&#34;&gt;&lt;a href=&#34;#what-i-tried-first&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What I Tried First
&lt;/h3&gt;&lt;p&gt;I found a theme I liked (hugo-theme-stack) and added it the &amp;ldquo;normal&amp;rdquo; way:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://github.com/CaiJimmy/hugo-theme-stack.git themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Worked perfectly locally. Hugo was happy, the site looked good, everything was great. Then I pushed to GitHub and tried to deploy with Cloudflare Pages.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fatal: No url found for submodule path &amp;#39;themes/stack&amp;#39; in .gitmodules
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Great. Just great.&lt;/p&gt;
&lt;h3 id=&#34;the-rabbit-hole&#34;&gt;&lt;a href=&#34;#the-rabbit-hole&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Rabbit Hole
&lt;/h3&gt;&lt;p&gt;This is where I spent way too much time trying different variations of &lt;code&gt;git rm --cached&lt;/code&gt; and &lt;code&gt;git submodule deinit&lt;/code&gt; and generally making things worse. Turns out GitHub was getting confused about the submodule reference, and Cloudflare couldn&amp;rsquo;t clone the theme during builds.&lt;/p&gt;
&lt;p&gt;I probably could have saved myself two hours by just reading the error message more carefully, but where&amp;rsquo;s the fun in that?&lt;/p&gt;
&lt;h3 id=&#34;what-actually-fixed-it&#34;&gt;&lt;a href=&#34;#what-actually-fixed-it&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What Actually Fixed It
&lt;/h3&gt;&lt;p&gt;Eventually I just nuked the whole thing and started over:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Burn it all down&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule deinit -f themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git rm --cached themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf .git/modules/themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Start fresh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://github.com/CaiJimmy/hugo-theme-stack.git themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule update --init --recursive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Re-added Stack theme as a proper submodule&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This time it actually worked. Sometimes the nuclear option is the right option.&lt;/p&gt;
&lt;h2 id=&#34;getting-cloudflare-pages-to-cooperate&#34;&gt;&lt;a href=&#34;#getting-cloudflare-pages-to-cooperate&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Getting Cloudflare Pages to Cooperate
&lt;/h2&gt;&lt;p&gt;With the submodule situation sorted, setting up Cloudflare Pages should have been straightforward. Should have been.&lt;/p&gt;
&lt;p&gt;I connected my GitHub repo to Cloudflare and set the build command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule update --init --recursive &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; hugo --gc --minify
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;First build attempt: failed. The error was something about field evaluation, which led me down another fun debugging path.&lt;/p&gt;
&lt;h3 id=&#34;the-hugo-version-problem&#34;&gt;&lt;a href=&#34;#the-hugo-version-problem&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Hugo Version Problem
&lt;/h3&gt;&lt;p&gt;Turns out Cloudflare Pages was running some ancient version of Hugo by default. My theme needed newer features, so I was getting errors like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;can&amp;#39;t evaluate field Lastmod in type page.Site
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The fix was adding a &lt;code&gt;package.json&lt;/code&gt; file to specify the Hugo version:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;engines&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hugo&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.118.2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Why this isn&amp;rsquo;t documented more prominently, I have no idea. But once I added that, builds started working.&lt;/p&gt;
&lt;h2 id=&#34;custom-domain-setup&#34;&gt;&lt;a href=&#34;#custom-domain-setup&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Custom Domain Setup
&lt;/h2&gt;&lt;p&gt;The last piece was getting my custom domain (&lt;code&gt;blog.spanswick.dev&lt;/code&gt;) working properly. This part was actually straightforward for once:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Added the domain in Cloudflare Pages under Custom Domains&lt;/li&gt;
&lt;li&gt;Set up DNS with a CNAME record pointing to the pages.dev URL&lt;/li&gt;
&lt;li&gt;Enabled proxy mode for better performance&lt;/li&gt;
&lt;li&gt;Set SSL to Full (Strict) because why not&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And&amp;hellip; it worked. First try. I was almost disappointed by how easy it was after everything else.&lt;/p&gt;
&lt;h2 id=&#34;what-i-learned&#34;&gt;&lt;a href=&#34;#what-i-learned&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What I Learned
&lt;/h2&gt;&lt;p&gt;The final workflow is actually pretty nice:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I write posts in markdown and commit to my Gitea instance&lt;/li&gt;
&lt;li&gt;Push to GitHub (manual for now, but I might automate this)&lt;/li&gt;
&lt;li&gt;Cloudflare automatically builds and deploys&lt;/li&gt;
&lt;li&gt;Everything just works&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main lessons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Git submodules are finicky&lt;/strong&gt; but they do work once you get them right&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Version pinning matters&lt;/strong&gt; - don&amp;rsquo;t assume the build environment has what you need&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sometimes starting over is faster&lt;/strong&gt; than trying to fix a broken git state&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Read error messages carefully&lt;/strong&gt; (I&amp;rsquo;m still working on this one)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;whats-next&#34;&gt;&lt;a href=&#34;#whats-next&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What&amp;rsquo;s Next?
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m pretty happy with how this turned out. The writing experience is smooth, deployment is automatic, and I don&amp;rsquo;t have to worry about keeping a CMS updated.&lt;/p&gt;
&lt;p&gt;I might add webhooks to automatically sync from Gitea to GitHub, just to remove that manual step. But honestly, the current setup works well enough that I&amp;rsquo;m not in a rush to complicate it further.&lt;/p&gt;
&lt;p&gt;Plus, now I actually have a place to write about all the other stuff I&amp;rsquo;ve been tinkering with. Mission accomplished, I guess.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;If you&amp;rsquo;re trying to do something similar and get stuck on the submodule thing, just remember: when in doubt, nuke it and start over. Sometimes that&amp;rsquo;s genuinely the fastest path forward.&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>

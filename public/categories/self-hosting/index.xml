<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Self-Hosting on My Blog</title>
        <link>http://192.168.100.63:1313/categories/self-hosting/</link>
        <description>Recent content in Self-Hosting on My Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 14 May 2025 15:00:00 -0400</lastBuildDate><atom:link href="http://192.168.100.63:1313/categories/self-hosting/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>First Homelab: Reflections, Diagram, and Stack</title>
        <link>http://192.168.100.63:1313/projects/homelab/</link>
        <pubDate>Wed, 14 May 2025 15:00:00 -0400</pubDate>
        
        <guid>http://192.168.100.63:1313/projects/homelab/</guid>
        <description>&lt;img src="http://192.168.100.63:1313/img/HL.jpg" alt="Featured image of post First Homelab: Reflections, Diagram, and Stack" /&gt;&lt;p&gt;&lt;img src=&#34;http://192.168.100.63:1313/img/HL.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Homelab Diagram&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;building-my-first-homelab-reflections-stack-and-next-steps&#34;&gt;&lt;a href=&#34;#building-my-first-homelab-reflections-stack-and-next-steps&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Building My First Homelab: Reflections, Stack, and Next Steps
&lt;/h1&gt;&lt;p&gt;I&amp;rsquo;ve always admired the impressive homelab diagrams circulating on self-hosting forums. After years of lurking, tinkering, and gradually collecting hardware, I finally decided to document my own setup and journey.&lt;/p&gt;
&lt;p&gt;This post summarizes what I&amp;rsquo;m running, what I&amp;rsquo;ve learned along the way, and how a casual experiment turned into a full-blown hobby.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;from-proxmox-curiosity-to-a-full-rack&#34;&gt;&lt;a href=&#34;#from-proxmox-curiosity-to-a-full-rack&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;From Proxmox Curiosity to a Full Rack
&lt;/h2&gt;&lt;p&gt;The homelab journey began a couple of years ago, when I picked up a Lenovo m720q Tiny to run a Kali VM for some light pen-testing and CTF challenges. The spark was there, but life intervened, and the project was shelved.&lt;/p&gt;
&lt;p&gt;Still, the curiosity stuck. After discovering the homelab and self-hosted communities, I took the plunge and bought two used servers—a Dell r730xd and an r430—right before the arrival of our second child. As you might expect, the servers went straight into storage.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;picking-up-the-project&#34;&gt;&lt;a href=&#34;#picking-up-the-project&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Picking Up the Project
&lt;/h2&gt;&lt;p&gt;Earlier this year, with a bit more time and sleep, I finally assembled the rack, wired up switches, and started building out the network. What started as a few VMs quickly became a full stack: network segmentation, VLANs, containers, and a host of new services.&lt;/p&gt;
&lt;p&gt;Recently, my attention has shifted toward AI experimentation. I built a dedicated AI rig, first with MI50 GPUs and now with 3090s and 3090Tis. Running local LLMs, experimenting with AI agents, and integrating custom tools has been a huge part of the learning curve.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;background&#34;&gt;&lt;a href=&#34;#background&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Background
&lt;/h2&gt;&lt;p&gt;For context, I’m not a professional system administrator. My background is in tech leadership and data science for a large company, but the homelab is strictly a hobby. It’s a late-night project fueled by curiosity, trial-and-error, and a desire to truly understand the technology I use.&lt;/p&gt;
&lt;p&gt;I enjoy exploring open-source services, experimenting with network architectures (sometimes to excess), and continually learning about security and automation in a hands-on way.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;current-stack&#34;&gt;&lt;a href=&#34;#current-stack&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Current Stack
&lt;/h2&gt;&lt;p&gt;Here&amp;rsquo;s what I have running today, organized by function.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Media &amp;amp; Entertainment&lt;/strong&gt;&lt;br&gt;
Jellyfin, *arr suite (Readarr, Prowlarr, etc.), qBittorrent with Gluetun VPN, Audiobookshelf&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lifestyle &amp;amp; Smart Home&lt;/strong&gt;&lt;br&gt;
Tandoor (recipes), Bar Assistant, Plant It, FreshRSS, Home Assistant&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Productivity &amp;amp; Documentation&lt;/strong&gt;&lt;br&gt;
Gitea (private Git), Nextcloud, PaperlessNGX, Draw.io, Filebrowser, n8n, Karakeep, Linkwarden, SANE Network Scanning, Kopia&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Databases&lt;/strong&gt;&lt;br&gt;
MariaDB, PostgreSQL, InfluxDB&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Monitoring &amp;amp; Management&lt;/strong&gt;&lt;br&gt;
Grafana, Uptime Kuma, Homepage dashboard, Portainer, Watchtower, Prometheus&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Security &amp;amp; Networking&lt;/strong&gt;&lt;br&gt;
OPNSense, Fail2Ban, Authelia (SSO/2FA), Pi-hole, Traefik, MITMproxy, Tailscale, Cloudflared&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AI Stack&lt;/strong&gt;&lt;br&gt;
llama.cpp, AnythingLLM, PostgreSQL with pgvector, n8n for orchestration&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;upcoming-projects&#34;&gt;&lt;a href=&#34;#upcoming-projects&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Upcoming Projects
&lt;/h2&gt;&lt;p&gt;Like most homelabbers, my &amp;ldquo;future plans&amp;rdquo; list is always growing. On the shortlist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Changedetection, Dashy, Glance, Homarr&lt;/li&gt;
&lt;li&gt;Revisit Matrix/Element setup&lt;/li&gt;
&lt;li&gt;Firefly III (personal finance), Immich (photos), Joplin (notes)&lt;/li&gt;
&lt;li&gt;Lube Logger, Monica, OnlyOffice, Open Meteo, Rocket.Chat, Syncthing, VSCode Server (currently running locally)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;lessons-learned&#34;&gt;&lt;a href=&#34;#lessons-learned&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Lessons Learned
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Hardware is interesting, but the real power is in what you do with it. The software ecosystem is where experimentation pays off.&lt;/li&gt;
&lt;li&gt;Network segmentation can be addictive. One VLAN for IoT leads to many more as complexity grows.&lt;/li&gt;
&lt;li&gt;Backups matter. Tools like Kopia and PaperlessNGX have already proven invaluable for recovery and organization.&lt;/li&gt;
&lt;li&gt;You do not need to be a sysadmin to run a homelab. Curiosity and persistence are more important than credentials.&lt;/li&gt;
&lt;li&gt;There is always more to learn, and that&amp;rsquo;s what makes this hobby worth the investment.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;&lt;a href=&#34;#next-steps&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Next Steps
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m planning a follow-up with hardware photos and a deep dive into the AI stack and automation workflows. If you have feedback, advice, or want to trade configs, let me know. I&amp;rsquo;m always looking for ways to improve or expand the lab.&lt;/p&gt;
&lt;p&gt;Stay tuned for more, and happy self-hosting.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Building a Robust Access Layer for Self-Hosted Services</title>
        <link>http://192.168.100.63:1313/projects/tunnel-setup/</link>
        <pubDate>Wed, 14 May 2025 12:00:00 -0500</pubDate>
        
        <guid>http://192.168.100.63:1313/projects/tunnel-setup/</guid>
        <description>&lt;img src="http://192.168.100.63:1313/img/oneoff/authelia.png" alt="Featured image of post Building a Robust Access Layer for Self-Hosted Services" /&gt;&lt;h1 id=&#34;making-my-self-hosted-services-actually-accessible-without-going-insane&#34;&gt;&lt;a href=&#34;#making-my-self-hosted-services-actually-accessible-without-going-insane&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Making My Self-Hosted Services Actually Accessible (Without Going Insane)
&lt;/h1&gt;&lt;p&gt;&lt;em&gt;How I finally got my recipe manager working from anywhere without poking holes in my firewall&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Posted: May 14, 2025 | 6 min read&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;So here&amp;rsquo;s the thing - I&amp;rsquo;ve been running services in my homelab for years, and every time I want to access something remotely, it turns into this whole ordeal. You know the drill: &amp;ldquo;just open a port,&amp;rdquo; they say. &amp;ldquo;Point your domain at it,&amp;rdquo; they say. Yeah, right. Tell that to my segmented VLANs and my paranoia about security.&lt;/p&gt;
&lt;p&gt;Last month I finally had enough. My wife kept asking why she couldn&amp;rsquo;t access our recipe collection (Tandoor Recipes) when she was out grocery shopping, and honestly, I was getting tired of VPN&amp;rsquo;ing in just to check if I had the ingredients for dinner. Time to build something proper.&lt;/p&gt;
&lt;p&gt;After way too much research and probably more frustration than necessary, I ended up with a setup using Cloudflared tunnels, Traefik, and Authelia. Spoiler alert: it actually works really well now, but getting there was&amp;hellip; an adventure.&lt;/p&gt;
&lt;h2 id=&#34;the-problem-aka-why-simple-solutions-suck&#34;&gt;&lt;a href=&#34;#the-problem-aka-why-simple-solutions-suck&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Problem (aka Why Simple Solutions Suck)
&lt;/h2&gt;&lt;p&gt;My homelab isn&amp;rsquo;t just one machine sitting in a closet. I&amp;rsquo;ve got services scattered across different VLANs because, you know, security. Tandoor lives on its own Docker host, the proxy stuff is somewhere else, and everything&amp;rsquo;s firewalled to hell and back.&lt;/p&gt;
&lt;p&gt;What I wanted was pretty reasonable, I thought:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Access my stuff from anywhere without opening ports&lt;/li&gt;
&lt;li&gt;Stop managing separate logins for everything&lt;/li&gt;
&lt;li&gt;Make it user-friendly enough that my family could actually use it&lt;/li&gt;
&lt;li&gt;Keep it modular so I&amp;rsquo;m not locked into some monolithic solution&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &amp;ldquo;just use a VPN&amp;rdquo; crowd can save it - I wanted something that actually felt like using a normal website.&lt;/p&gt;
&lt;h2 id=&#34;how-i-solved-it-the-technical-bits&#34;&gt;&lt;a href=&#34;#how-i-solved-it-the-technical-bits&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;How I Solved It (The Technical Bits)
&lt;/h2&gt;&lt;h3 id=&#34;the-stack&#34;&gt;&lt;a href=&#34;#the-stack&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Stack
&lt;/h3&gt;&lt;p&gt;I went with three main pieces:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloudflared Tunnel&lt;/strong&gt; - This thing is honestly brilliant. Instead of punching holes in your firewall, it creates an outbound connection to Cloudflare. Your services stay completely internal, but you can access them through proper domains.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Traefik&lt;/strong&gt; - Handles all the reverse proxy magic. Routes requests, manages SSL certificates, plays nice with Docker labels. Once you get the hang of it, adding new services is actually pretty painless.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Authelia&lt;/strong&gt; - The authentication layer. Single sign-on, 2FA, granular access controls. Makes everything feel professional instead of like a garage project.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s how they fit together:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Internet
   │
Cloudflare (your domain DNS)
   │
Cloudflared Tunnel (Docker container)
   │
Traefik Reverse Proxy
   │
Authelia Authentication
   │
Tandoor Service (on another VLAN)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;getting-cloudflared-working&#34;&gt;&lt;a href=&#34;#getting-cloudflared-working&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Getting Cloudflared Working
&lt;/h3&gt;&lt;p&gt;The tunnel setup was actually the easiest part, which surprised me. Create a tunnel in the Cloudflare dashboard, grab the token, throw it in a Docker container:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;cloudflared&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cloudflare/cloudflared:latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;unless-stopped&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;command&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tunnel run&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;TUNNEL_TOKEN=&amp;lt;your-token-here&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./cloudflared:/etc/cloudflared&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The only gotcha I hit was making sure the credentials file was mounted properly. Oh, and if you&amp;rsquo;re dealing with WebSocket apps, you might need some extra config - learned that one the hard way.&lt;/p&gt;
&lt;h3 id=&#34;traefik-configuration-hell-then-heaven&#34;&gt;&lt;a href=&#34;#traefik-configuration-hell-then-heaven&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Traefik Configuration Hell (Then Heaven)
&lt;/h3&gt;&lt;p&gt;Traefik&amp;rsquo;s great once it&amp;rsquo;s working, but man, those labels are picky. Miss a capital letter or mess up the syntax and nothing works. No helpful error messages either - it just silently ignores your configuration.&lt;/p&gt;
&lt;p&gt;My static config ended up looking like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# traefik.yml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;entryPoints&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;web&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;address&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:80&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;websecure&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;address&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:443&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;providers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;docker&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;exposedByDefault&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;certificatesResolvers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;cloudflare&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;acme&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;email&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your-email@domain.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;storage&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/etc/traefik/acme.json&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;dnsChallenge&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;provider&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cloudflare&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For services, the labels look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;labels&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;traefik.enable=true&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;traefik.http.routers.tandoor.rule=Host(`recipes.yourdomain.com`)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;traefik.http.routers.tandoor.entrypoints=websecure&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;traefik.http.routers.tandoor.tls.certresolver=cloudflare&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;traefik.http.routers.tandoor.middlewares=authelia@docker&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Pro tip: Use a YAML linter. Seriously. Saved me hours of debugging.&lt;/p&gt;
&lt;h3 id=&#34;authelia-powerful-but-intimidating&#34;&gt;&lt;a href=&#34;#authelia-powerful-but-intimidating&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Authelia: Powerful but Intimidating
&lt;/h3&gt;&lt;p&gt;Authelia&amp;rsquo;s config file is&amp;hellip; extensive. Like, really extensive. I probably spent more time on this than everything else combined, mostly because I kept overthinking it.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what worked for me (simplified):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0.0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;9091&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;log_level&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;info&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;authentication_backend&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;file&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/config/users_database.yml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;access_control&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;default_policy&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;deny&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;rules&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;recipes.yourdomain.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;policy&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;two_factor&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;session&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;authelia_session&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;secret&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;your-secret-here&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;expiration&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1h&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;storage&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;local&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/config/db.sqlite3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;notifier&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;filesystem&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;filename&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/config/notification.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Start simple, get it working, then add complexity. Trust me on this one.&lt;/p&gt;
&lt;h3 id=&#34;the-vlan-nightmare&#34;&gt;&lt;a href=&#34;#the-vlan-nightmare&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The VLAN Nightmare
&lt;/h3&gt;&lt;p&gt;Here&amp;rsquo;s where things got interesting. Tandoor runs on a completely different network segment, so Traefik couldn&amp;rsquo;t just magically find it. I had to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open firewall rules between the Traefik host and Tandoor&amp;rsquo;s host&lt;/li&gt;
&lt;li&gt;Set up proper DNS resolution (or just use IP addresses)&lt;/li&gt;
&lt;li&gt;Configure Traefik to route to the external service&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The key was adding this to Traefik:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;traefik.http.services.tandoor.loadbalancer.server.url=http://192.168.100.100:8085&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Took me way too long to figure out that one line.&lt;/p&gt;
&lt;h2 id=&#34;what-i-learned-the-hard-way&#34;&gt;&lt;a href=&#34;#what-i-learned-the-hard-way&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What I Learned (The Hard Way)
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;VLANs will humble you.&lt;/strong&gt; I thought I knew networking. I was wrong. Spend time getting your firewall rules right before you blame the software.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Start with the basics.&lt;/strong&gt; Don&amp;rsquo;t try to set up everything at once. Get a simple HTTP service working first, then add authentication, then SSL, then complexity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Documentation is your friend.&lt;/strong&gt; Especially for Authelia - that config file has about 50 different options and most of them aren&amp;rsquo;t obvious.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Version control everything.&lt;/strong&gt; I keep all my configs in a private Git repo. When something breaks (and it will), you can actually figure out what changed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloudflared is magic.&lt;/strong&gt; Seriously, the peace of mind of not having any open ports is worth the setup hassle.&lt;/p&gt;
&lt;h2 id=&#34;was-it-worth-it&#34;&gt;&lt;a href=&#34;#was-it-worth-it&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Was It Worth It?
&lt;/h2&gt;&lt;p&gt;Absolutely. My wife can now check recipes while shopping, I can access my services from anywhere, and I sleep better knowing I&amp;rsquo;m not running an open port festival.&lt;/p&gt;
&lt;p&gt;The best part? Adding new services is actually easy now. Same pattern every time: add the Docker labels, create an Authelia rule, done. It scales really well once you have the foundation in place.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re thinking about doing something similar, start small. Pick one service, get it working end-to-end, then expand. The modular approach means you&amp;rsquo;re not locked into anything - if you hate Traefik tomorrow, you can swap it out without rebuilding everything.&lt;/p&gt;
&lt;p&gt;And hey, if you get stuck, the homelab community is pretty helpful. Just don&amp;rsquo;t ask them about VLANs unless you want a 3-hour discussion about network segmentation philosophy.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;All the config files and Docker Compose examples are in my GitHub repo if you want to see the full setup. Just search for my username and &amp;ldquo;homelab-access-stack&amp;rdquo; or something like that.&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>From Torrent to Library: Automating TV, Movies, and Audiobooks with Gluetun, qBittorrent, and arr</title>
        <link>http://192.168.100.63:1313/projects/torrent-setup/</link>
        <pubDate>Wed, 14 May 2025 13:00:00 -0400</pubDate>
        
        <guid>http://192.168.100.63:1313/projects/torrent-setup/</guid>
        <description>&lt;hr&gt;
&lt;h1 id=&#34;building-my-perfect-media-automation-pipeline&#34;&gt;&lt;a href=&#34;#building-my-perfect-media-automation-pipeline&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Building My Perfect Media Automation Pipeline
&lt;/h1&gt;&lt;p&gt;&lt;em&gt;How I stopped manually managing downloads and built a self-running media server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Posted: May 14, 2025 | ~11 minute read&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I got tired of the constant dance. Download something, figure out where it went, rename it properly, move it to the right folder, update the media server. Rinse and repeat, dozens of times a week. There had to be a better way.&lt;/p&gt;
&lt;p&gt;What I really wanted was dead simple: new episodes show up automatically, everything gets organized correctly, and most importantly, my ISP never sees what I&amp;rsquo;m actually downloading. After months of tinkering, I finally have a setup that just works.&lt;/p&gt;
&lt;h2 id=&#34;what-i-built&#34;&gt;&lt;a href=&#34;#what-i-built&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What I Built
&lt;/h2&gt;&lt;p&gt;The core idea is a fully automated pipeline that handles everything from search to final organization, all running behind a VPN with proper kill switches. Here&amp;rsquo;s what happens now:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sonarr/Radarr monitor for new releases&lt;/li&gt;
&lt;li&gt;They automatically grab torrents through qBittorrent&lt;/li&gt;
&lt;li&gt;Everything downloads through a VPN (Gluetun) with zero IP leaks&lt;/li&gt;
&lt;li&gt;Files get renamed and sorted automatically&lt;/li&gt;
&lt;li&gt;Media shows up in Jellyfin ready to stream&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;No manual intervention required. It&amp;rsquo;s honestly a bit magical when it works right.&lt;/p&gt;
&lt;h2 id=&#34;the-technical-stack&#34;&gt;&lt;a href=&#34;#the-technical-stack&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Technical Stack
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Gluetun&lt;/strong&gt; - This is the secret sauce. It&amp;rsquo;s a VPN container that other containers can route through. No VPN leaks, ever.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;qBittorrent&lt;/strong&gt; - The actual torrent client, but locked inside Gluetun&amp;rsquo;s network&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sonarr &amp;amp; Radarr&lt;/strong&gt; - The automation brains for TV and movies respectively&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audiobookshelf&lt;/strong&gt; - Because I got tired of Audible&amp;rsquo;s limitations&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unraid NAS&lt;/strong&gt; - Where everything actually lives&lt;/p&gt;
&lt;p&gt;The architecture looks like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Internet]
   │
[Gluetun VPN Container]
   │
[qBittorrent Container (network_mode: service:gluetun)]
   │
[Sonarr/Radarr/Audiobookshelf]
   │
[Unraid NAS SMB/NFS Shares]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;the-vpn-foundation-gluetun&#34;&gt;&lt;a href=&#34;#the-vpn-foundation-gluetun&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The VPN Foundation: Gluetun
&lt;/h2&gt;&lt;p&gt;Most VPN setups are sketchy. They work until they don&amp;rsquo;t, and then your real IP gets exposed while downloading the latest season of whatever. Gluetun solves this by creating a container that other services route through. If the VPN goes down, nothing gets through. Period.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m using Private Internet Access because their pricing is decent and they don&amp;rsquo;t keep logs (allegedly). The setup looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gluetun&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;qmcgaw/gluetun:latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cap_add&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;NET_ADMIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;VPN_SERVICE_PROVIDER=private internet access&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;OPENVPN_USER=your-username&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;OPENVPN_PASSWORD=your-password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;SERVER_COUNTRIES=United States&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8080:8080&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# qBittorrent Web UI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8989:8989&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Sonarr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;7878:7878&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Radarr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./gluetun:/gluetun&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The key insight is that all the web UI ports get mapped through the Gluetun container. This way, if the VPN is down, nothing is accessible.&lt;/p&gt;
&lt;h2 id=&#34;the-download-engine-qbittorrent&#34;&gt;&lt;a href=&#34;#the-download-engine-qbittorrent&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Download Engine: qBittorrent
&lt;/h2&gt;&lt;p&gt;qBittorrent runs inside Gluetun&amp;rsquo;s network namespace, which means it literally cannot access the internet without the VPN being up. This is way more reliable than trying to configure a VPN client inside the container.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;qbittorrent&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;linuxserver/qbittorrent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;depends_on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;gluetun&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;network_mode&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;service:gluetun&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;PUID=1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;PGID=1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;TZ=America/New_York&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;WEBUI_PORT=8080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/mnt/r430/media/torrents:/downloads&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./qbittorrent/config:/config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;unless-stopped&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;network_mode: &amp;quot;service:gluetun&amp;quot;&lt;/code&gt; line is crucial - that&amp;rsquo;s what locks qBittorrent inside the VPN tunnel.&lt;/p&gt;
&lt;h2 id=&#34;the-automation-layer-sonarr-and-radarr&#34;&gt;&lt;a href=&#34;#the-automation-layer-sonarr-and-radarr&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Automation Layer: Sonarr and Radarr
&lt;/h2&gt;&lt;p&gt;These are the tools that actually make everything automatic. They monitor RSS feeds and indexers for new releases, then tell qBittorrent what to download. Once something finishes downloading, they handle the renaming and moving to final folders.&lt;/p&gt;
&lt;p&gt;Sonarr handles TV shows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;sonarr&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;linuxserver/sonarr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;network_mode&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;service:gluetun&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;PUID=1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;PGID=1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;TZ=America/New_York&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/mnt/r430/media/tv:/tv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/mnt/r430/media/torrents:/downloads&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./sonarr/config:/config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;unless-stopped&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Radarr does the same thing for movies:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;radarr&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;linuxserver/radarr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;network_mode&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;service:gluetun&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;PUID=1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;PGID=1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;TZ=America/New_York&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/mnt/r430/media/movies:/movies&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/mnt/r430/media/torrents:/downloads&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./radarr/config:/config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;unless-stopped&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Both also run through the VPN, though this is arguably overkill since they&amp;rsquo;re just managing files locally.&lt;/p&gt;
&lt;h2 id=&#34;audiobooks-breaking-free-from-audible&#34;&gt;&lt;a href=&#34;#audiobooks-breaking-free-from-audible&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Audiobooks: Breaking Free from Audible
&lt;/h2&gt;&lt;p&gt;I got sick of Audible&amp;rsquo;s limitations and DRM nonsense, so I added Audiobookshelf to the mix. It&amp;rsquo;s like having your own private audiobook streaming service.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;audiobookshelf&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ghcr.io/advplyr/audiobookshelf:latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;audiobookshelf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;13378:80&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;TZ=America/New_York&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/mnt/r430/media/audiobooks:/audiobooks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/mnt/r430/media/ebooks:/ebooks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./audiobookshelf/config:/config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./audiobookshelf/metadata:/metadata&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;unless-stopped&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This one doesn&amp;rsquo;t need the VPN since it&amp;rsquo;s just serving files that are already local.&lt;/p&gt;
&lt;h2 id=&#34;storage-the-unraid-foundation&#34;&gt;&lt;a href=&#34;#storage-the-unraid-foundation&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Storage: The Unraid Foundation
&lt;/h2&gt;&lt;p&gt;Everything lives on my Unraid NAS, shared out via SMB. The Docker containers mount these shares directly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/mnt/r430/media/torrents&lt;/code&gt; - Downloads staging area&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/mnt/r430/media/tv&lt;/code&gt; - Final TV show library&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/mnt/r430/media/movies&lt;/code&gt; - Final movie library&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/mnt/r430/media/audiobooks&lt;/code&gt; - Audiobook collection&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This keeps everything centralized and accessible to other services like Jellyfin.&lt;/p&gt;
&lt;h2 id=&#34;what-goes-wrong-and-how-to-fix-it&#34;&gt;&lt;a href=&#34;#what-goes-wrong-and-how-to-fix-it&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What Goes Wrong (And How to Fix It)
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;VPN Connection Issues&lt;/strong&gt; - Your VPN provider matters. Some have terrible reliability or throttle torrent traffic. I&amp;rsquo;ve had good luck with PIA, but YMMV.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Permission Nightmares&lt;/strong&gt; - Make sure all containers run with the same PUID/PGID (1000/1000 in my case). Otherwise file moves between containers will fail spectacularly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Network Complexity&lt;/strong&gt; - Docker networking plus VLANs plus VPNs can get weird. Keep it simple - only expose the ports you actually need.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Storage Explosion&lt;/strong&gt; - Automated downloads can fill up drives fast. Set up monitoring and maybe some cleanup scripts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quality Control&lt;/strong&gt; - Without good filters, you&amp;rsquo;ll end up with terabytes of garbage. Spend time configuring quality profiles in Sonarr/Radarr.&lt;/p&gt;
&lt;h2 id=&#34;lessons-from-the-trenches&#34;&gt;&lt;a href=&#34;#lessons-from-the-trenches&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Lessons from the Trenches
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Test your kill switch&lt;/strong&gt; - Disconnect your VPN and make sure nothing leaks. I use &lt;a class=&#34;link&#34; href=&#34;https://ipleak.net&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ipleak.net&lt;/a&gt; from inside the qBittorrent container.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Version control your configs&lt;/strong&gt; - Keep your Docker Compose files in Git. When (not if) you break something, you can roll back easily.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Monitor disk space&lt;/strong&gt; - Automated downloads are great until they fill your array at 3 AM.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Good indexers matter&lt;/strong&gt; - The quality of your automation is only as good as your sources. Invest in decent private trackers if you can.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Backup your configs&lt;/strong&gt; - Losing your Sonarr/Radarr database means re-adding everything manually. Not fun.&lt;/p&gt;
&lt;h2 id=&#34;the-results&#34;&gt;&lt;a href=&#34;#the-results&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Results
&lt;/h2&gt;&lt;p&gt;After running this for about six months, I&amp;rsquo;m genuinely happy with how it&amp;rsquo;s working out. New episodes just appear in Jellyfin without me thinking about it. Movies I want to watch show up automatically. Audiobooks sync across all my devices.&lt;/p&gt;
&lt;p&gt;The privacy aspect gives me peace of mind - there&amp;rsquo;s literally no way for downloads to happen without the VPN being active. Even if something goes wrong with the VPN connection, everything just stops rather than falling back to my real IP.&lt;/p&gt;
&lt;p&gt;Performance has been solid too. The VPN overhead is minimal, and having everything automated means the system stays busy during off-peak hours when bandwidth is cheap.&lt;/p&gt;
&lt;h2 id=&#34;worth-the-complexity&#34;&gt;&lt;a href=&#34;#worth-the-complexity&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Worth the Complexity?
&lt;/h2&gt;&lt;p&gt;For me, absolutely. The initial setup took a weekend of tinkering, but now I spend maybe 5 minutes a month managing the whole system. Compare that to the hours I used to spend manually downloading and organizing files.&lt;/p&gt;
&lt;p&gt;The main downside is complexity - there are a lot of moving parts, and troubleshooting can be tricky when something breaks. But the time savings and peace of mind make it worthwhile.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re already comfortable with Docker and have a decent understanding of networking, this setup isn&amp;rsquo;t too bad to replicate. If you&amp;rsquo;re just getting started with self-hosting, maybe begin with something simpler and work your way up.&lt;/p&gt;
&lt;h2 id=&#34;whats-next&#34;&gt;&lt;a href=&#34;#whats-next&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What&amp;rsquo;s Next
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m considering adding Prowlarr to manage indexers more centrally, and maybe Bazarr for subtitle automation. The setup is modular enough that adding new components is pretty straightforward.&lt;/p&gt;
&lt;p&gt;I also want to improve the monitoring - knowing when things break before they affect the end user experience would be nice.&lt;/p&gt;
&lt;p&gt;Overall though, this has been one of my more successful homelab projects. It solves a real problem and actually stays working once you get it configured properly.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;If you&amp;rsquo;re curious about specific configuration details or run into issues setting this up, I&amp;rsquo;ve got the full Docker Compose files and notes in my GitHub repo. Just search for my username and &amp;ldquo;media-automation&amp;rdquo; or something similar.&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Self-Hosted Series: Tandoor</title>
        <link>http://192.168.100.63:1313/projects/tandoor-recipe-management/</link>
        <pubDate>Sat, 15 Mar 2025 00:00:00 +0000</pubDate>
        
        <guid>http://192.168.100.63:1313/projects/tandoor-recipe-management/</guid>
        <description>&lt;h1 id=&#34;finally-getting-my-recipe-chaos-under-control-with-tandoor&#34;&gt;&lt;a href=&#34;#finally-getting-my-recipe-chaos-under-control-with-tandoor&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Finally Getting My Recipe Chaos Under Control with Tandoor
&lt;/h1&gt;&lt;p&gt;&lt;em&gt;How I stopped losing track of great recipes and built my own digital cookbook&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I had a problem. Actually, multiple problems, all related to recipes. There were bookmarks scattered across three different browsers, screenshots buried in my photo library, handwritten notes shoved in kitchen drawers, and that one amazing pasta sauce recipe my friend texted me two years ago that I can never find when I actually need it.&lt;/p&gt;
&lt;p&gt;Sound familiar? I kept meaning to get organized, but every solution I looked at had some dealbreaker. Too expensive, too limited, required subscriptions, or worst of all - what happens when the service shuts down and takes all my carefully curated recipes with it?&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s when I discovered Tandoor Recipes. It&amp;rsquo;s open source, runs on my own hardware, and gives me complete control over my recipe collection. After using it for several months, I can honestly say it&amp;rsquo;s been a game changer for meal planning and grocery shopping.&lt;/p&gt;
&lt;h2 id=&#34;why-i-went-the-self-hosted-route&#34;&gt;&lt;a href=&#34;#why-i-went-the-self-hosted-route&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Why I Went the Self-Hosted Route
&lt;/h2&gt;&lt;p&gt;Look, I get it. Setting up your own recipe manager sounds like overkill. There are plenty of apps out there that work fine. But here&amp;rsquo;s what sold me on doing it myself:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;My data stays mine.&lt;/strong&gt; I&amp;rsquo;ve been burned before by services shutting down or changing their business model. Remember Google Reader? Yeah, I&amp;rsquo;m not doing that again with my recipe collection.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;No algorithmic nonsense.&lt;/strong&gt; I don&amp;rsquo;t need an AI suggesting recipes based on my &amp;ldquo;cooking personality&amp;rdquo; or whatever. I just want to find that chicken tikka masala recipe without wading through ads.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual customization.&lt;/strong&gt; I can organize things exactly how I want. Custom categories, tags that make sense to me, themes that don&amp;rsquo;t hurt my eyes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Built-in meal planning tools.&lt;/strong&gt; The grocery list generation alone has saved me countless trips back to the store for forgotten ingredients.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OCR for old cookbooks.&lt;/strong&gt; This feature is honestly magic. I can take a photo of a recipe from my grandmother&amp;rsquo;s cookbook and it&amp;rsquo;ll extract the text automatically.&lt;/p&gt;
&lt;h2 id=&#34;getting-tandoor-up-and-running&#34;&gt;&lt;a href=&#34;#getting-tandoor-up-and-running&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Getting Tandoor Up and Running
&lt;/h2&gt;&lt;p&gt;I run most of my self-hosted stuff in Docker on a home server, and Tandoor fits right into that setup. Here&amp;rsquo;s how I got it working.&lt;/p&gt;
&lt;h3 id=&#34;my-file-organization&#34;&gt;&lt;a href=&#34;#my-file-organization&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;My File Organization
&lt;/h3&gt;&lt;p&gt;I try to keep things organized, so everything lives under &lt;code&gt;/opt/docker/&lt;/code&gt; with data stored on my NAS:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/opt/docker/tandoor/          # Application files
/mnt/r430/tandoor/recipes/    # Recipe database
/mnt/r430/tandoor/mediafiles/ # Recipe photos
/mnt/r430/tandoor/staticfiles/ # CSS, JS, etc.
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;the-docker-setup&#34;&gt;&lt;a href=&#34;#the-docker-setup&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Docker Setup
&lt;/h3&gt;&lt;p&gt;Here&amp;rsquo;s my &lt;code&gt;docker-compose.yml&lt;/code&gt;. I&amp;rsquo;m using an external PostgreSQL database because I already had one running for other services, but you could easily run the database in Docker too:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;web&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;vabene1111/recipes:latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tandoor_web&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;unless-stopped&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;depends_on&lt;/span&gt;: []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/mnt/r430/tandoor/recipes:/opt/recipes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/mnt/r430/tandoor/mediafiles:/opt/recipes/mediafiles&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/mnt/r430/tandoor/staticfiles:/opt/recipes/staticfiles&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;env_file&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;.env&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8080:8000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;tandoor-net&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;tandoor-net&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;driver&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bridge&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;environment-configuration&#34;&gt;&lt;a href=&#34;#environment-configuration&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Environment Configuration
&lt;/h3&gt;&lt;p&gt;All the sensitive stuff goes in the &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Database connection&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;POSTGRES_HOST&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;192.168.100.52&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;POSTGRES_PORT&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;5432&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;POSTGRES_USER&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tandoor&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;your-secure-password-here&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;POSTGRES_DB&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tandoor&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Django settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SECRET_KEY&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;generate-a-long-random-string-here&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DEBUG&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ALLOWED_HOSTS&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;TZ&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;America/New_York&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Make sure you generate a proper secret key - Django uses this for security stuff, so don&amp;rsquo;t just use &amp;ldquo;password123&amp;rdquo; or something equally terrible.&lt;/p&gt;
&lt;h3 id=&#34;database-setup-external-postgresql&#34;&gt;&lt;a href=&#34;#database-setup-external-postgresql&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Database Setup (External PostgreSQL)
&lt;/h3&gt;&lt;p&gt;Since I&amp;rsquo;m running PostgreSQL in a separate LXC container, I had to set up the database manually. If you&amp;rsquo;re doing the same:&lt;/p&gt;
&lt;p&gt;SSH into your database server and create the Tandoor database:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo -u postgres psql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; tandoor;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;USER&lt;/span&gt; tandoor &lt;span style=&#34;color:#66d9ef&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ENCRYPTED&lt;/span&gt; PASSWORD &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-secure-password&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ALL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIVILEGES&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; tandoor &lt;span style=&#34;color:#66d9ef&#34;&gt;TO&lt;/span&gt; tandoor;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; tandoor &lt;span style=&#34;color:#66d9ef&#34;&gt;OWNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TO&lt;/span&gt; tandoor;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then configure PostgreSQL to accept connections from your Docker host. Edit &lt;code&gt;postgresql.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;listen_addresses&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And update &lt;code&gt;pg_hba.conf&lt;/code&gt; to allow your network:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;host    tandoor    tandoor    192.168.100.0/24    md5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Restart PostgreSQL:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl restart postgresql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;firing-it-up&#34;&gt;&lt;a href=&#34;#firing-it-up&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Firing It Up
&lt;/h3&gt;&lt;p&gt;With everything configured, start the container:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-compose up -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check the logs to make sure everything&amp;rsquo;s working:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker logs -f tandoor_web
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If all goes well, Tandoor should be accessible at &lt;code&gt;http://your-server-ip:8080&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;living-with-tandoor&#34;&gt;&lt;a href=&#34;#living-with-tandoor&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Living With Tandoor
&lt;/h2&gt;&lt;p&gt;After using this setup for months, I&amp;rsquo;m genuinely happy with how it&amp;rsquo;s working out. The web interface is clean and responsive, recipe import works well with most sites, and the meal planning features have actually changed how I approach grocery shopping.&lt;/p&gt;
&lt;p&gt;The OCR feature deserves special mention - I&amp;rsquo;ve been slowly digitizing recipes from old family cookbooks, and it saves tons of typing. Not perfect, but way better than doing it all manually.&lt;/p&gt;
&lt;p&gt;Storage-wise, it&amp;rsquo;s been pretty lightweight. Even with a couple hundred recipes and photos, it&amp;rsquo;s using less than 2GB of space.&lt;/p&gt;
&lt;h2 id=&#34;worth-the-effort&#34;&gt;&lt;a href=&#34;#worth-the-effort&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Worth the Effort?
&lt;/h2&gt;&lt;p&gt;For me, absolutely. The peace of mind of having everything under my own control is worth the initial setup time. Plus, it&amp;rsquo;s nice having a recipe system that actually works the way I want it to, not the way some product manager thinks I should want it to.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re already running other self-hosted services, Tandoor fits right in. If this would be your first Docker container, it might be worth starting with something simpler, but it&amp;rsquo;s not particularly complex to set up.&lt;/p&gt;
&lt;p&gt;The main downside is that it&amp;rsquo;s not going to have all the social features of some commercial recipe apps. No sharing recipes with friends or browsing community collections. But honestly, I see that as a feature, not a bug.&lt;/p&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;&lt;a href=&#34;#next-steps&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Next Steps
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m still tweaking the setup. Considering adding it to my reverse proxy setup so I can access it from outside my network, and I want to set up automated backups of the recipe database.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s also a mobile app in development, which would be handy for checking recipes while actually cooking. Right now I just use the web interface on my phone, which works fine but isn&amp;rsquo;t quite as smooth as a native app.&lt;/p&gt;
&lt;p&gt;If you decide to give Tandoor a try, let me know how it goes. I&amp;rsquo;m always curious to hear how other people organize their recipe collections and whether they run into any issues I haven&amp;rsquo;t encountered yet.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Now if only I could get as organized with actually using all these recipes I&amp;rsquo;ve been collecting&amp;hellip;&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Setting Up Hugo with Gitea, GitHub, and Cloudflare Pages</title>
        <link>http://192.168.100.63:1313/projects/hugo-blog-setup/</link>
        <pubDate>Sat, 15 Mar 2025 00:00:00 +0000</pubDate>
        
        <guid>http://192.168.100.63:1313/projects/hugo-blog-setup/</guid>
        <description>&lt;h1 id=&#34;getting-my-blog-actually-working-hugo--gitea--github--cloudflare-pages&#34;&gt;&lt;a href=&#34;#getting-my-blog-actually-working-hugo--gitea--github--cloudflare-pages&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Getting My Blog Actually Working: Hugo + Gitea + GitHub + Cloudflare Pages
&lt;/h1&gt;&lt;p&gt;&lt;em&gt;Or: How I learned to stop worrying and love Git submodules (eventually)&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;So I finally got tired of not having a proper blog. You know how it is - you keep meaning to write stuff down, maybe share some of the things you&amp;rsquo;ve figured out, but then you get stuck on the whole &amp;ldquo;where do I even host this thing&amp;rdquo; question for like six months.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d been running other services in my homelab, so naturally I wanted to keep control of my content while still making it easy to publish. After way too much research (and a few false starts), I ended up with Hugo feeding into a pretty slick deployment pipeline. Here&amp;rsquo;s how it all came together.&lt;/p&gt;
&lt;h2 id=&#34;why-hugo-though&#34;&gt;&lt;a href=&#34;#why-hugo-though&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Why Hugo Though?
&lt;/h2&gt;&lt;p&gt;Honestly? Speed and simplicity. I&amp;rsquo;ve dealt with WordPress before and while it&amp;rsquo;s powerful, I really didn&amp;rsquo;t want to babysit another database or worry about security updates for a CMS. Hugo just takes markdown files and spits out a static site that loads crazy fast.&lt;/p&gt;
&lt;p&gt;Plus, the whole &amp;ldquo;write in markdown, commit to git, site updates automatically&amp;rdquo; workflow really appealed to the developer side of my brain. No admin panels, no databases, just files and version control.&lt;/p&gt;
&lt;h2 id=&#34;the-setup-spoiler-it-got-complicated&#34;&gt;&lt;a href=&#34;#the-setup-spoiler-it-got-complicated&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Setup (Spoiler: It Got Complicated)
&lt;/h2&gt;&lt;p&gt;My plan seemed reasonable enough:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keep the main repo in my internal Gitea instance (because I like having control)&lt;/li&gt;
&lt;li&gt;Mirror it to GitHub (because that&amp;rsquo;s what Cloudflare Pages wants to see)&lt;/li&gt;
&lt;li&gt;Let Cloudflare handle the building and hosting (because why reinvent that wheel)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple, right? &lt;em&gt;Narrator: It was not simple.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;getting-hugo-running&#34;&gt;&lt;a href=&#34;#getting-hugo-running&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Getting Hugo Running
&lt;/h3&gt;&lt;p&gt;The basic setup was actually painless. On my server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create the site structure:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site myblog
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So far so good. Then I needed a theme, and that&amp;rsquo;s where things got&amp;hellip; interesting.&lt;/p&gt;
&lt;h2 id=&#34;the-great-submodule-adventure&#34;&gt;&lt;a href=&#34;#the-great-submodule-adventure&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Great Submodule Adventure
&lt;/h2&gt;&lt;p&gt;Hugo themes are typically managed as Git submodules, which sounds great in theory. In practice? Well, let me tell you about my afternoon of increasingly creative swearing.&lt;/p&gt;
&lt;h3 id=&#34;what-i-tried-first&#34;&gt;&lt;a href=&#34;#what-i-tried-first&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What I Tried First
&lt;/h3&gt;&lt;p&gt;I found a theme I liked (hugo-theme-stack) and added it the &amp;ldquo;normal&amp;rdquo; way:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://github.com/CaiJimmy/hugo-theme-stack.git themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Worked perfectly locally. Hugo was happy, the site looked good, everything was great. Then I pushed to GitHub and tried to deploy with Cloudflare Pages.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fatal: No url found for submodule path &amp;#39;themes/stack&amp;#39; in .gitmodules
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Great. Just great.&lt;/p&gt;
&lt;h3 id=&#34;the-rabbit-hole&#34;&gt;&lt;a href=&#34;#the-rabbit-hole&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Rabbit Hole
&lt;/h3&gt;&lt;p&gt;This is where I spent way too much time trying different variations of &lt;code&gt;git rm --cached&lt;/code&gt; and &lt;code&gt;git submodule deinit&lt;/code&gt; and generally making things worse. Turns out GitHub was getting confused about the submodule reference, and Cloudflare couldn&amp;rsquo;t clone the theme during builds.&lt;/p&gt;
&lt;p&gt;I probably could have saved myself two hours by just reading the error message more carefully, but where&amp;rsquo;s the fun in that?&lt;/p&gt;
&lt;h3 id=&#34;what-actually-fixed-it&#34;&gt;&lt;a href=&#34;#what-actually-fixed-it&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What Actually Fixed It
&lt;/h3&gt;&lt;p&gt;Eventually I just nuked the whole thing and started over:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Burn it all down&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule deinit -f themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git rm --cached themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf .git/modules/themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Start fresh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://github.com/CaiJimmy/hugo-theme-stack.git themes/stack
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule update --init --recursive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Re-added Stack theme as a proper submodule&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This time it actually worked. Sometimes the nuclear option is the right option.&lt;/p&gt;
&lt;h2 id=&#34;getting-cloudflare-pages-to-cooperate&#34;&gt;&lt;a href=&#34;#getting-cloudflare-pages-to-cooperate&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Getting Cloudflare Pages to Cooperate
&lt;/h2&gt;&lt;p&gt;With the submodule situation sorted, setting up Cloudflare Pages should have been straightforward. Should have been.&lt;/p&gt;
&lt;p&gt;I connected my GitHub repo to Cloudflare and set the build command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule update --init --recursive &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; hugo --gc --minify
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;First build attempt: failed. The error was something about field evaluation, which led me down another fun debugging path.&lt;/p&gt;
&lt;h3 id=&#34;the-hugo-version-problem&#34;&gt;&lt;a href=&#34;#the-hugo-version-problem&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;The Hugo Version Problem
&lt;/h3&gt;&lt;p&gt;Turns out Cloudflare Pages was running some ancient version of Hugo by default. My theme needed newer features, so I was getting errors like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;can&amp;#39;t evaluate field Lastmod in type page.Site
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The fix was adding a &lt;code&gt;package.json&lt;/code&gt; file to specify the Hugo version:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;engines&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hugo&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.118.2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Why this isn&amp;rsquo;t documented more prominently, I have no idea. But once I added that, builds started working.&lt;/p&gt;
&lt;h2 id=&#34;custom-domain-setup&#34;&gt;&lt;a href=&#34;#custom-domain-setup&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Custom Domain Setup
&lt;/h2&gt;&lt;p&gt;The last piece was getting my custom domain (&lt;code&gt;blog.spanswick.dev&lt;/code&gt;) working properly. This part was actually straightforward for once:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Added the domain in Cloudflare Pages under Custom Domains&lt;/li&gt;
&lt;li&gt;Set up DNS with a CNAME record pointing to the pages.dev URL&lt;/li&gt;
&lt;li&gt;Enabled proxy mode for better performance&lt;/li&gt;
&lt;li&gt;Set SSL to Full (Strict) because why not&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And&amp;hellip; it worked. First try. I was almost disappointed by how easy it was after everything else.&lt;/p&gt;
&lt;h2 id=&#34;what-i-learned&#34;&gt;&lt;a href=&#34;#what-i-learned&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What I Learned
&lt;/h2&gt;&lt;p&gt;The final workflow is actually pretty nice:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I write posts in markdown and commit to my Gitea instance&lt;/li&gt;
&lt;li&gt;Push to GitHub (manual for now, but I might automate this)&lt;/li&gt;
&lt;li&gt;Cloudflare automatically builds and deploys&lt;/li&gt;
&lt;li&gt;Everything just works&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main lessons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Git submodules are finicky&lt;/strong&gt; but they do work once you get them right&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Version pinning matters&lt;/strong&gt; - don&amp;rsquo;t assume the build environment has what you need&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sometimes starting over is faster&lt;/strong&gt; than trying to fix a broken git state&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Read error messages carefully&lt;/strong&gt; (I&amp;rsquo;m still working on this one)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;whats-next&#34;&gt;&lt;a href=&#34;#whats-next&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;What&amp;rsquo;s Next?
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m pretty happy with how this turned out. The writing experience is smooth, deployment is automatic, and I don&amp;rsquo;t have to worry about keeping a CMS updated.&lt;/p&gt;
&lt;p&gt;I might add webhooks to automatically sync from Gitea to GitHub, just to remove that manual step. But honestly, the current setup works well enough that I&amp;rsquo;m not in a rush to complicate it further.&lt;/p&gt;
&lt;p&gt;Plus, now I actually have a place to write about all the other stuff I&amp;rsquo;ve been tinkering with. Mission accomplished, I guess.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;If you&amp;rsquo;re trying to do something similar and get stuck on the submodule thing, just remember: when in doubt, nuke it and start over. Sometimes that&amp;rsquo;s genuinely the fastest path forward.&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
